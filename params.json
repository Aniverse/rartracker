{
  "name": "rartracker",
  "tagline": "Complete private bittorrent tracker written in AngularJS and PHP",
  "body": "# rartracker\r\nA modern front and backend bittorrent tracker written in AngularJS and PHP.\r\n## Version\r\n0.3.0\r\n## Author\r\nthe swedish torrent king\r\n## Feature highlights\r\n* Super responsive GUI thanks to the SPA-application nature of AngularJS\r\n* Advanced admin-features for monitoring site activity, handling reports and multi-deleting torrents.\r\n* Many features suitable for scene only trackers\r\n* Awesome features like bonus-system, leech bonus, seed-time, request system and rss-system.\r\n* Highly skinnable and mobile friendly design with Bootstrap CSS\r\n* Very clean code to grasp for developers\r\n* Dynamic multi language support\r\n\r\n# Installation\r\n## 1. Install Node.js/npm and Git\r\n\r\n**Windows:**\r\n* https://nodejs.org/en/download/\r\n* https://git-scm.com/download/win (Choose: Use/run Git from the Command Prompt (cmd.exe))\r\n\r\n**Ubuntu/Debian:**\r\n```sh\r\n$ sudo apt-get install -y nodejs\r\n$ sudo apt-get install -y git-core\r\n```\r\n\r\n## 2. Install dependencies\r\nFrom the project folder install all build script packages and all 3rd party dependencies\r\n```sh\r\n$ npm install --global bower\r\n$ npm install --global gulp-cli\r\n$ npm install\r\n$ bower install\r\n$ gulp dist\r\n```\r\n## 3. Import database (databse/database.sql)\r\n\r\n# Configurations\r\n\r\n### 1. Basic config\r\nCreate the file **secrets.php** in the api/ folder.\r\n````\r\n<?php\r\n$database = 'mysql';\r\n$host = '127.0.0.1';\r\n$dbname = 'rartracker';\r\n$username = 'root';\r\n$password = '';\r\n````\r\n\r\nSome site settings in api/Config.php and app/app.config.js should be changed!\r\n\r\n### 2. Generate new unique salt hashes (optional for security)\r\n* Note that updating the salts will make current registered accounts unusable, you'd want to log in and create invite codes (step 4) before changing salts and finally registering new accounts.\r\n* $passwordSalt and $cookieSalt in **User.php** should be updated with new random hashes.\r\n\r\n### 3. Create admin accounts\r\nUse built in account named \"**System**\" password: \"**password**\" to create invites and register new admin-accounts\r\nThe \"System\" account **must remain** as a parked account and have Staff rights because it's used as deleter of torrents, sender of PM and creation of forum topics etc. Change System password.\r\n\r\n## Server settings\r\n### Recommended packages\r\n``php5 apache2 mariadb-server libapache2-mod-php5 php5-mysql memcached php5-curl php5-memcached``\r\n### Enable rewrite module and change AllowOverride from \"None\" to \"All\" in httpd.conf in order for .htaccess to work\r\n``a2enmod rewrite``\r\n### Permissions\r\nThe following folders needs to be created and be given write permission:\r\n\r\n* torrents/\r\n* subs/\r\n* img/imdb/\r\n\r\n### Recommended MariaDB settings\r\nThis is for making the fulltext search work\r\n```sh\r\n[mysqld]\r\nft_min_word_len=1\r\nft_stopword_file='stopword_file.txt'\r\ntmp_table_size=2G\r\nmax_heap_table_size=2G\r\n```\r\n\r\n## Crontab settings (crontab -e)\r\n````\r\n12      *       *       *       *       wget -O /dev/null http://127.0.0.1/api/v1/run-leechbonus\r\n*/20    *       *       *       *       wget -O /dev/null http://127.0.0.1/api/v1/run-cleanup\r\n0       0       *       *       *       wget -O /dev/null http://127.0.0.1/api/v1/fetch-tvdata\r\n0       0       *       *       5       wget -O /dev/null http://127.0.0.1/api/v1/run-bonus\r\n0       20      *       *       *       wget -O /dev/null http://127.0.0.1/api/v1/run-statistics\r\n````\r\n\r\n## Language support\r\n\r\nThe default language is English, but if you want the back and front end to default to another of the available languages you need to change the default language variable in **Config.php** and **app.config.js**. If the user changes the display language, the default language will still be used for site wide logs and automatic messages.\r\n\r\n## Developing and deploying\r\n### Developing\r\nIn the project folder run ``gulp watch``. This will lauch a watcher that continuously build the code into the dist/.\r\n### Deploying\r\nIn the project folder run ``gulp dist`` and the code will be minified and scrambled, a JsHint check will also be made.\r\n\r\nThe **app/** folder should never be exposed in live production, since its html/js is beeing packaged into **dist/**\r\n\r\n# License\r\n[WTFPL]\r\n\r\n[//]: #\r\n[WTFPL]: <http://www.wtfpl.net/>\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}